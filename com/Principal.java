package com;

import com.utils.FileUtils;
import com.utils.ModeloTabela;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 11/03/2011, 23:37:04
 */
/**
 *
 * @author rudieri
 */
public class Principal extends javax.swing.JFrame {

    File cache;
    ArrayList<String> list;
    private Integer currentCache = 0;

    /** Creates new form Principal */
    public Principal() throws Exception {
        try {
            initComponents();
            list = new ArrayList<String>();
            cache = new File("cache.lol");
            if (!cache.exists()) {
                try {
                    cache.createNewFile();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            lerCache();
            inicializarTabela();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void reload() throws FileNotFoundException, IOException, Exception {

        lerCache();
        inicializarTabela();
    }

    private void inicializarTabela() {
        ModeloTabela model = new ModeloTabela();
        model.setRowCount(0);
        model.setColumnCount(0);
        model.addColumn("Lista de programas acessados", false);


        for (int i = 0; i < list.size(); i++) {
            Object[] row = new Object[1];
            row[0] = list.get(i);
            model.addRow(row);
        }
        jTable1.setModel(model);
    }

    private void lerCache() throws FileNotFoundException, IOException, Exception {
        StringBuffer leArquivo = FileUtils.leArquivo(cache);
        String[] linhas = leArquivo.toString().trim().split("\n");
        list.addAll(Arrays.asList(linhas));
    }

    private void gravarCache() throws  Exception {
        String aux = "";
        for (int i = 0; i < list.size(); i++) {
            aux += list.get(i) + "\n";
        }
        FileUtils.gravaArquivo(new StringBuffer(aux), cache);
    }

    private void addCache(String st) {
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).equals(st)) {
                return;
            }
        }
        list.add(st);
    }

    private void executaClasse() {
        String txt = jTextField1.getText();
        executaClasse(txt);
    }

    private void executaClasse(String txt) {
        try {
            ClassLoader loader = new ClassLoader() {
            };
            Class<?> loadedClass = loader.loadClass(txt);
            loadedClass.newInstance();
            addCache(txt);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel_executar = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel_Status = new javax.swing.JPanel();
        jLabel_Status = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel_executar.setLayout(new java.awt.BorderLayout());

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel_executar.add(jTextField1, java.awt.BorderLayout.CENTER);

        jButton1.setText("Go!!!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_executar.add(jButton1, java.awt.BorderLayout.LINE_END);

        jPanel2.add(jPanel_executar);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowSelectionAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel_Status.setLayout(new java.awt.BorderLayout());

        jLabel_Status.setText("status");
        jPanel_Status.add(jLabel_Status, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel_Status, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-528)/2, (screenSize.height-227)/2, 528, 227);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        executaClasse();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:

        switch (evt.getKeyCode()) {
            case KeyEvent.VK_UP:
                if (currentCache < 0) {
                    return;
                }
                jTextField1.setText(list.get(currentCache--));
                break;
            case KeyEvent.VK_DOWN:
                if (currentCache >= list.size() - 1) {
                    return;
                }
                jTextField1.setText(list.get(currentCache++));
            case KeyEvent.VK_ENTER:
                executaClasse();

            default:

        }


    }//GEN-LAST:event_jTextField1KeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
            try {
                // TODO add your handling code here:
                gravarCache();
            } catch (Exception ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_formWindowClosing

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        switch (evt.getButton()) {
            case MouseEvent.BUTTON1:
                if (evt.getClickCount() == 2) {
                    executaClasse((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                }
                break;
            case MouseEvent.BUTTON2:
                jTextField1.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                break;
            default:

        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        jTable1.setRowSelectionInterval(row, row);
    }//GEN-LAST:event_jTable1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel_Status;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_Status;
    private javax.swing.JPanel jPanel_executar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
